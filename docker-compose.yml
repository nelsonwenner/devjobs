version: "3.7"

services:
  rails-app:
    build: .
    container_name: rails-container
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
      - gems:/bundles
    ports: 
      - "3333:3333"
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://root:root@postgres:5432
      REDIS_URL: redis://redis:6379/1
      MAILCATCHER_HOST: mailcatcher
      APP_DOMAIN: rails-app
    depends_on: 
      - postgres
      - redis
    stdin_open: true
    tty: true
    networks:
      - app-network
    command: >
      bash -c "docker/app-entrypoint.sh"

  sidekiq:
    build: .
    container_name: sidekiq-container
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
      - gems:/bundles
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://root:root@postgres:5432
      REDIS_URL: redis://redis:6379/1
      MAILCATCHER_HOST: mailcatcher
      APP_DOMAIN: sidekiq
    depends_on:
      - rails-app 
    networks:
      - app-network
    command: >
      bash -c "docker/sidekiq-entrypoint.sh"

  postgres:
    container_name: postgres-container
    image: postgres:11-alpine
    ports: 
      - "5432:5432"
    volumes: 
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    restart: always
    networks: 
      - app-network

  redis:
    image: redis:6.0.9-alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    networks: 
      - app-network

  mailcatcher:
    restart: on-failure:10
    image: dockage/mailcatcher:0.7.1
    ports:
      - "1080:1080"
      - "1025:1025"
    networks: 
      - app-network

  adminer:
    container_name: adminer-container
    image: adminer
    ports:
      - 8080:8080
    restart: always
    networks: 
      - app-network

volumes:
  gems:
  postgres:

networks:
  app-network:
    driver: "bridge"
